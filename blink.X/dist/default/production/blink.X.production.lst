

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 19 10:25:26 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12   000000                     
    13                           ; Generated 17/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4580 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47   000000                     _PORTB	set	3969
    48   000000                     _TRISB	set	3987
    49                           
    50                           ; #config settings
    51                           
    52                           	psect	cinit
    53   000702                     __pcinit:
    54                           	callstack 0
    55   000702                     start_initialization:
    56                           	callstack 0
    57   000702                     __initialization:
    58                           	callstack 0
    59   000702                     end_of_initialization:
    60                           	callstack 0
    61   000702                     __end_of__initialization:
    62                           	callstack 0
    63   000702  0100               	movlb	0
    64   000704  EF01  F003         	goto	_main	;jump to C main() function
    65                           
    66                           	psect	cstackCOMRAM
    67   000001                     __pcstackCOMRAM:
    68                           	callstack 0
    69   000001                     delay@i:
    70                           	callstack 0
    71                           
    72                           ; 2 bytes @ 0x0
    73   000001                     	ds	2
    74   000003                     delay@j:
    75                           	callstack 0
    76                           
    77                           ; 2 bytes @ 0x2
    78   000003                     	ds	2
    79   000005                     ??_main:
    80                           
    81                           ; 1 bytes @ 0x4
    82   000005                     	ds	3
    83   000008                     main@k:
    84                           	callstack 0
    85                           
    86                           ; 2 bytes @ 0x7
    87   000008                     	ds	2
    88   00000A                     main@j:
    89                           	callstack 0
    90                           
    91                           ; 2 bytes @ 0x9
    92   00000A                     	ds	2
    93                           
    94 ;;
    95 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
    96 ;;
    97 ;; *************** function _main *****************
    98 ;; Defined at:
    99 ;;		line 12 in file "blink.c"
   100 ;; Parameters:    Size  Location     Type
   101 ;;		None
   102 ;; Auto vars:     Size  Location     Type
   103 ;;  j               2    9[COMRAM] int 
   104 ;;  k               2    7[COMRAM] int 
   105 ;; Return value:  Size  Location     Type
   106 ;;                  2   10[None  ] int 
   107 ;; Registers used:
   108 ;;		wreg, status,2, status,0, cstack
   109 ;; Tracked objects:
   110 ;;		On entry : 0/0
   111 ;;		On exit  : 0/0
   112 ;;		Unchanged: 0/0
   113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   114 ;;      Params:         0       0       0       0       0       0       0
   115 ;;      Locals:         4       0       0       0       0       0       0
   116 ;;      Temps:          3       0       0       0       0       0       0
   117 ;;      Totals:         7       0       0       0       0       0       0
   118 ;;Total ram usage:        7 bytes
   119 ;; Hardware stack levels required when called: 1
   120 ;; This function calls:
   121 ;;		_delay
   122 ;; This function is called by:
   123 ;;		Startup code after reset
   124 ;; This function uses a non-reentrant model
   125 ;;
   126                           
   127                           	psect	text0
   128   000602                     __ptext0:
   129                           	callstack 0
   130   000602                     _main:
   131                           	callstack 30
   132   000602                     
   133                           ;blink.c: 13:     TRISB = 0X00;
   134   000602  0E00               	movlw	0
   135   000604  6E93               	movwf	147,c	;volatile
   136   000606                     l11:
   137                           
   138                           ;blink.c: 15:         for(int k=0;k<8;k++){
   139   000606  0E00               	movlw	0
   140   000608  6E09               	movwf	(main@k+1)^0,c
   141   00060A  0E00               	movlw	0
   142   00060C  6E08               	movwf	main@k^0,c
   143   00060E                     l723:
   144   00060E  BE09               	btfsc	(main@k+1)^0,7,c
   145   000610  EF13  F003         	goto	u31
   146   000614  5009               	movf	(main@k+1)^0,w,c
   147   000616  E109               	bnz	u30
   148   000618  0E08               	movlw	8
   149   00061A  5C08               	subwf	main@k^0,w,c
   150   00061C  A0D8               	btfss	status,0,c
   151   00061E  EF13  F003         	goto	u31
   152   000622  EF15  F003         	goto	u30
   153   000626                     u31:
   154   000626  EF17  F003         	goto	l727
   155   00062A                     u30:
   156   00062A  EF2E  F003         	goto	l735
   157   00062E                     l727:
   158                           
   159                           ;blink.c: 16:         PORTB = 0X80 >> k;
   160   00062E  C008  F005         	movff	main@k,??_main
   161   000632  0E80               	movlw	128
   162   000634  6E06               	movwf	(??_main+1)^0,c
   163   000636  0E00               	movlw	0
   164   000638  6E07               	movwf	(??_main+2)^0,c
   165   00063A  2A05               	incf	??_main^0,f,c
   166   00063C  EF23  F003         	goto	u44
   167   000640                     u45:
   168   000640  3407               	rlcf	(??_main+2)^0,w,c
   169   000642  3207               	rrcf	(??_main+2)^0,f,c
   170   000644  3206               	rrcf	(??_main+1)^0,f,c
   171   000646                     u44:
   172   000646  2E05               	decfsz	??_main^0,f,c
   173   000648  EF20  F003         	goto	u45
   174   00064C  5006               	movf	(??_main+1)^0,w,c
   175   00064E  6E81               	movwf	129,c	;volatile
   176   000650                     
   177                           ;blink.c: 17:         delay();
   178   000650  EC58  F003         	call	_delay	;wreg free
   179   000654                     
   180                           ;blink.c: 18:         }
   181   000654  4A08               	infsnz	main@k^0,f,c
   182   000656  2A09               	incf	(main@k+1)^0,f,c
   183   000658  EF07  F003         	goto	l723
   184   00065C                     l735:
   185                           
   186                           ;blink.c: 20:         for(int j=0;j<8;j++){
   187   00065C  0E00               	movlw	0
   188   00065E  6E0B               	movwf	(main@j+1)^0,c
   189   000660  0E00               	movlw	0
   190   000662  6E0A               	movwf	main@j^0,c
   191   000664                     l737:
   192   000664  BE0B               	btfsc	(main@j+1)^0,7,c
   193   000666  EF3E  F003         	goto	u51
   194   00066A  500B               	movf	(main@j+1)^0,w,c
   195   00066C  E109               	bnz	u50
   196   00066E  0E08               	movlw	8
   197   000670  5C0A               	subwf	main@j^0,w,c
   198   000672  A0D8               	btfss	status,0,c
   199   000674  EF3E  F003         	goto	u51
   200   000678  EF40  F003         	goto	u50
   201   00067C                     u51:
   202   00067C  EF42  F003         	goto	l741
   203   000680                     u50:
   204   000680  EF03  F003         	goto	l11
   205   000684                     l741:
   206                           
   207                           ;blink.c: 21:         PORTB = 0X01 << j;
   208   000684  C00A  F005         	movff	main@j,??_main
   209   000688  0E01               	movlw	1
   210   00068A  6E06               	movwf	(??_main+1)^0,c
   211   00068C  2A05               	incf	??_main^0,f,c
   212   00068E  EF4B  F003         	goto	u64
   213   000692                     u65:
   214   000692  90D8               	bcf	status,0,c
   215   000694  3606               	rlcf	(??_main+1)^0,f,c
   216   000696                     u64:
   217   000696  2E05               	decfsz	??_main^0,f,c
   218   000698  EF49  F003         	goto	u65
   219   00069C  5006               	movf	(??_main+1)^0,w,c
   220   00069E  6E81               	movwf	129,c	;volatile
   221   0006A0                     
   222                           ;blink.c: 22:         delay();}
   223   0006A0  EC58  F003         	call	_delay	;wreg free
   224   0006A4  4A0A               	infsnz	main@j^0,f,c
   225   0006A6  2A0B               	incf	(main@j+1)^0,f,c
   226   0006A8  EF32  F003         	goto	l737
   227   0006AC  EF00  F000         	goto	start
   228   0006B0                     __end_of_main:
   229                           	callstack 0
   230                           
   231 ;; *************** function _delay *****************
   232 ;; Defined at:
   233 ;;		line 25 in file "blink.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;  j               2    2[COMRAM] int 
   238 ;;  i               2    0[COMRAM] int 
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      void 
   241 ;; Registers used:
   242 ;;		wreg, status,2, status,0
   243 ;; Tracked objects:
   244 ;;		On entry : 0/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   248 ;;      Params:         0       0       0       0       0       0       0
   249 ;;      Locals:         4       0       0       0       0       0       0
   250 ;;      Temps:          0       0       0       0       0       0       0
   251 ;;      Totals:         4       0       0       0       0       0       0
   252 ;;Total ram usage:        4 bytes
   253 ;; Hardware stack levels used: 1
   254 ;; This function calls:
   255 ;;		Nothing
   256 ;; This function is called by:
   257 ;;		_main
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261                           	psect	text1
   262   0006B0                     __ptext1:
   263                           	callstack 0
   264   0006B0                     _delay:
   265                           	callstack 30
   266   0006B0                     
   267                           ;blink.c: 27: for(int i=0;i<100;i++)
   268   0006B0  0E00               	movlw	0
   269   0006B2  6E02               	movwf	(delay@i+1)^0,c
   270   0006B4  0E00               	movlw	0
   271   0006B6  6E01               	movwf	delay@i^0,c
   272   0006B8                     l707:
   273                           
   274                           ;blink.c: 28:     for(int j=0;j<100;j++);
   275   0006B8  0E00               	movlw	0
   276   0006BA  6E04               	movwf	(delay@j+1)^0,c
   277   0006BC  0E00               	movlw	0
   278   0006BE  6E03               	movwf	delay@j^0,c
   279   0006C0                     l713:
   280   0006C0  4A03               	infsnz	delay@j^0,f,c
   281   0006C2  2A04               	incf	(delay@j+1)^0,f,c
   282   0006C4  BE04               	btfsc	(delay@j+1)^0,7,c
   283   0006C6  EF6E  F003         	goto	u11
   284   0006CA  5004               	movf	(delay@j+1)^0,w,c
   285   0006CC  E109               	bnz	u10
   286   0006CE  0E64               	movlw	100
   287   0006D0  5C03               	subwf	delay@j^0,w,c
   288   0006D2  A0D8               	btfss	status,0,c
   289   0006D4  EF6E  F003         	goto	u11
   290   0006D8  EF70  F003         	goto	u10
   291   0006DC                     u11:
   292   0006DC  EF60  F003         	goto	l713
   293   0006E0                     u10:
   294   0006E0  4A01               	infsnz	delay@i^0,f,c
   295   0006E2  2A02               	incf	(delay@i+1)^0,f,c
   296   0006E4  BE02               	btfsc	(delay@i+1)^0,7,c
   297   0006E6  EF7E  F003         	goto	u21
   298   0006EA  5002               	movf	(delay@i+1)^0,w,c
   299   0006EC  E109               	bnz	u20
   300   0006EE  0E64               	movlw	100
   301   0006F0  5C01               	subwf	delay@i^0,w,c
   302   0006F2  A0D8               	btfss	status,0,c
   303   0006F4  EF7E  F003         	goto	u21
   304   0006F8  EF80  F003         	goto	u20
   305   0006FC                     u21:
   306   0006FC  EF5C  F003         	goto	l707
   307   000700                     u20:
   308   000700  0012               	return		;funcret
   309   000702                     __end_of_delay:
   310                           	callstack 0
   311                           
   312                           	psect	smallconst
   313   000600                     __psmallconst:
   314                           	callstack 0
   315   000600  00                 	db	0
   316   000601  00                 	db	0	; dummy byte at the end
   317   000000                     
   318                           	psect	rparam
   319   000000                     tosu	equ	0xFFF
   320                           tosh	equ	0xFFE
   321                           tosl	equ	0xFFD
   322                           stkptr	equ	0xFFC
   323                           pclatu	equ	0xFFB
   324                           pclath	equ	0xFFA
   325                           pcl	equ	0xFF9
   326                           tblptru	equ	0xFF8
   327                           tblptrh	equ	0xFF7
   328                           tblptrl	equ	0xFF6
   329                           tablat	equ	0xFF5
   330                           prodh	equ	0xFF4
   331                           prodl	equ	0xFF3
   332                           indf0	equ	0xFEF
   333                           postinc0	equ	0xFEE
   334                           postdec0	equ	0xFED
   335                           preinc0	equ	0xFEC
   336                           plusw0	equ	0xFEB
   337                           fsr0h	equ	0xFEA
   338                           fsr0l	equ	0xFE9
   339                           wreg	equ	0xFE8
   340                           indf1	equ	0xFE7
   341                           postinc1	equ	0xFE6
   342                           postdec1	equ	0xFE5
   343                           preinc1	equ	0xFE4
   344                           plusw1	equ	0xFE3
   345                           fsr1h	equ	0xFE2
   346                           fsr1l	equ	0xFE1
   347                           bsr	equ	0xFE0
   348                           indf2	equ	0xFDF
   349                           postinc2	equ	0xFDE
   350                           postdec2	equ	0xFDD
   351                           preinc2	equ	0xFDC
   352                           plusw2	equ	0xFDB
   353                           fsr2h	equ	0xFDA
   354                           fsr2l	equ	0xFD9
   355                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     150
                                              4 COMRAM     7     7      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                4     4      0      60
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      B       B       1       11.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRh          6C      0       0      16        0.0%
BITBIGSFRlh         11      0       0      17        0.0%
BITBIGSFRll        281      0       0      18        0.0%
ABS                  0      0       0      19        0.0%
BIGRAM             5FF      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 19 10:25:26 2024

                     l11 0606                       l25 0700                       u10 06E0  
                     u11 06DC                       u20 0700                       u21 06FC  
                     u30 062A                       u31 0626                       u50 0680  
                     u51 067C                       u44 0646                       u45 0640  
                     u64 0696                       u65 0692                      l701 06B0  
                    l713 06C0                      l721 0602                      l715 06C4  
                    l707 06B8                      l731 0654                      l723 060E  
                    l717 06E0                      l741 0684                      l719 06E4  
                    l743 06A0                      l735 065C                      l727 062E  
                    l745 06A4                      l737 0664                      l729 0650  
                   _main 0602                     start 0000             ___param_bank 0000  
                  ?_main 0001                    _PORTB 0F81                    _TRISB 0F93  
                  _delay 06B0                    main@j 000A                    main@k 0008  
                  status 0FD8          __initialization 0702             __end_of_main 06B0  
                 ??_main 0005            __activetblptr 0000                   ?_delay 0001  
                 delay@i 0001                   delay@j 0003                   isa$std 0001  
           __mediumconst 0000               __accesstop 0060  __end_of__initialization 0702  
          ___rparam_used 0001           __pcstackCOMRAM 0001            __end_of_delay 0702  
                ??_delay 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0600                  __pcinit 0702                  __ramtop 0600  
                __ptext0 0602                  __ptext1 06B0     end_of_initialization 0702  
    start_initialization 0702              __smallconst 0600                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 0000  
